<?xml version="1.0"?>

<ruleset name="zyzxSonar" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>zyzxSonar</description>

    <rule name="MethodParameterCountRule"
          language="java"
          message="java.zyzx.MethodParameterCountRule.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.MethodParameterCountRule">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
    public void methodB(int a, int b, int c, int d, int e) {

    }
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    public void methodA(Obj o) {

    }
]]>
        </example>
    </rule>
    <rule name="CompareToResultTestCheck"
          language="java"
          message="java.zyzx.CompareToResultTestCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CompareToResultTestCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
    if (myClass.compareTo(arg) == -1) {  // Noncompliant
        // ...
    }
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    if (myClass.compareTo(arg) < 0) {
        // ...
    }
]]>
        </example>
    </rule>
    <rule name="CompareToReturnValueCheck"
          language="java"
          message="java.zyzx.CompareToReturnValueCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CompareToReturnValueCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
    public int compareTo(MyClass myclass) {
      if (condition) {
        return Integer.MIN_VALUE;  // Noncompliant
      }
     }
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    public int compareTo(MyClass myclass) {
      if (condition) {
        return -1;
      }
    }
]]>
        </example>
    </rule>
    <rule name="LongBitsToDoubleOnIntCheck"
          language="java"
          message="java.zyzx.LongBitsToDoubleOnIntCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.LongBitsToDoubleOnIntCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
int i = 42;
double d = Double.longBitsToDouble(i);  // Noncompliant
]]>
        </example>
    </rule>
    <rule name="MethodNamedEqualsCheck"
          language="java"
          message="java.zyzx.MethodNamedEqualsCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.MethodNamedEqualsCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
class MyClass {
  private int foo = 1;

  public boolean equals(MyClass o) {  // Noncompliant; does not override Object.equals(Object)
    return o != null && o.foo == this.foo;
  }

  public static void main(String[] args) {
    MyClass o1 = new MyClass();
    Object o2 = new MyClass();
    System.out.println(o1.equals(o2));  // Prints "false" because o2 an Object not a MyClass
  }
}

class MyClass2 {
  public boolean equals(MyClass2 o) {  // Ignored; `boolean equals(Object)` also present
    //..
  }

  public boolean equals(Object o) {
    //...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    class MyClass {
  private int foo = 1;

  @Override
  public boolean equals(Object o) {
    if (this == o) {
        return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    MyClass other = (MyClass)o;
    return this.foo == other.foo;
  }

  /* ... */
}
]]>
        </example>
    </rule>
    <rule name="EqualsOverridenWithHashCodeCheck"
          language="java"
          message="java.zyzx.EqualsOverridenWithHashCodeCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.EqualsOverridenWithHashCodeCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
class MyClass {    // Noncompliant - should also override "hashCode()"

  @Override
  public boolean equals(Object obj) {
    /* ... */
  }

}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
class MyClass {    // Compliant

  @Override
  public boolean equals(Object obj) {
    /* ... */
  }

  @Override
  public int hashCode() {
    /* ... */
  }

}
]]>
        </example>
    </rule>
    <rule name="ArrayHashCodeAndToStringCheck"
          language="java"
          message="java.zyzx.ArrayHashCodeAndToStringCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ArrayHashCodeAndToStringCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public static void main( String[] args )
{
    String argStr = args.toString(); // Noncompliant
    int argHash = args.hashCode(); // Noncompliant

]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public static void main( String[] args )
{
    String argStr = Arrays.toString(args);
    int argHash = Arrays.hashCode(args);

]]>
        </example>
    </rule>
    <rule name="HasNextCallingNextCheck"
          language="java"
          message="java.zyzx.HasNextCallingNextCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.HasNextCallingNextCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public class FibonacciIterator implements Iterator<Integer>{
...
@Override
public boolean hasNext() {
  if(next() != null) {
    return true;
  }
  return false;
}
...
}
]]>
        </example>
    </rule>
    <rule name="IteratorNextExceptionCheck"
          language="java"
          message="java.zyzx.IteratorNextExceptionCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.IteratorNextExceptionCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public class MyIterator implements Iterator<String>{
  ...
  public String next(){
    if(!hasNext()){
      return null;
    }
    ...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public class MyIterator implements Iterator<String>{
  ...
  public String next(){
    if(!hasNext()){
      throw new NoSuchElementException();
    }
    ...
  }
}
]]>
        </example>
    </rule>
    <rule name="PreparedStatementAndResultSetCheck"
          language="java"
          message="java.zyzx.PreparedStatementAndResultSetCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.PreparedStatementAndResultSetCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
PreparedStatement ps = con.prepareStatement("SELECT fname, lname FROM employees where hireDate > ? and salary < ?");
ps.setDate(0, date);  // Noncompliant
ps.setDouble(3, salary);  // Noncompliant

ResultSet rs = ps.executeQuery();
while (rs.next()) {
  String fname = rs.getString(0);  // Noncompliant
  // ...
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
PreparedStatement ps = con.prepareStatement("SELECT fname, lname FROM employees where hireDate > ? and salary < ?");
ps.setDate(1, date);
ps.setDouble(2, salary);

ResultSet rs = ps.executeQuery();
while (rs.next()) {
  String fname = rs.getString(1);
  // ...
}
]]>
        </example>
    </rule>
    <rule name="UnusedReturnedDataCheck"
          language="java"
          message="java.zyzx.UnusedReturnedDataCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.UnusedReturnedDataCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public void doSomethingWithFile(String fileName) {
  BufferedReader buffReader = null;
  try {
    buffReader = new BufferedReader(new FileReader(fileName));
    while (buffReader.readLine() != null) { // Noncompliant
      // ...
    }
  } catch (IOException e) {
    // ...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public void doSomethingWithFile(String fileName) {
  BufferedReader buffReader = null;
  try {
    buffReader = new BufferedReader(new FileReader(fileName));
    String line = null;
    while ((line = buffReader.readLine()) != null) {
      // ...
    }
  } catch (IOException e) {
    // ...
  }
}
]]>
        </example>
    </rule>
    <rule name="RunFinalizersCheck"
          language="java"
          message="java.zyzx.RunFinalizersCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.RunFinalizersCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public static void main(String [] args) {
  ...
  System.runFinalizersOnExit(true);  // Noncompliant
  ...
}

protected void finalize(){
  doSomething();
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public static void main(String [] args) {
  Runtime.addShutdownHook(new Runnable() {
    public void run(){
      doSomething();
    }
  });
  //...
]]>
        </example>
    </rule>
    <rule name="ScheduledThreadPoolExecutorZeroCheck"
          language="java"
          message="java.zyzx.ScheduledThreadPoolExecutorZeroCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ScheduledThreadPoolExecutorZeroCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public void do(){

  ScheduledThreadPoolExecutor stpe1 = new ScheduledThreadPoolExecutor(0); // Noncompliant

  ScheduledThreadPoolExecutor stpe2 = new ScheduledThreadPoolExecutor(POOL_SIZE);
  stpe2.setCorePoolSize(0);  // Noncompliant
]]>
        </example>
    </rule>
    <rule name="InnerClassOfNonSerializableCheck"
          language="java"
          message="java.zyzx.InnerClassOfNonSerializableCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.InnerClassOfNonSerializableCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public class Pomegranate {
  // ...

  public class Seed implements Serializable {  // Noncompliant; serialization will fail
    // ...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public class Pomegranate {
  // ...

  public static class Seed implements Serializable {
    // ...
  }
}
]]>
        </example>
    </rule>
    <rule name="StringBufferAndBuilderWithCharCheck"
          language="java"
          message="java.zyzx.StringBufferAndBuilderWithCharCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.StringBufferAndBuilderWithCharCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
     用字符实例化StringBuilder或StringBuffer会产生误导，因为大多数Java开发人员都希望字符是StringBuffer的初始值。实际发生的是，字符的int表示用于确定StringBuffer的初始大小。
    StringBuffer foo = new StringBuffer('x');   //错误 等同于 StringBuffer foo = new StringBuffer(120);
    StringBuffer foo = new StringBuffer("x");  //正确示例
Negative example:
StringBuffer foo = new StringBuffer('x');   //equivalent to StringBuffer foo = new StringBuffer(120);
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
StringBuffer foo = new StringBuffer("x");
]]>
        </example>
    </rule>
    <rule name="ObjectFinalizeOverridenCallsSuperFinalizeCheck"
          language="java"
          message="java.zyzx.ObjectFinalizeOverridenCallsSuperFinalizeCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ObjectFinalizeOverridenCallsSuperFinalizeCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
protected void finalize() {   // Noncompliant; no call to super.finalize();
  releaseSomeResources();
}

protected void finalize() {
  super.finalize();  // Noncompliant; this call should come last
  releaseSomeResources();
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
protected void finalize() {
  releaseSomeResources();
  super.finalize();
}
]]>
        </example>
    </rule>
    <rule name="ThreadRunCheck"
          language="java"
          message="java.zyzx.ThreadRunCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ThreadRunCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
Thread myThread = new Thread(runnable);
myThread.run(); // Noncompliant
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
protected void finalize() {
  releaseSomeResources();
  super.finalize();

]]>
        </example>
    </rule>
    <rule name="ToStringReturningNullCheck"
          language="java"
          message="java.zyzx.ToStringReturningNullCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ToStringReturningNullCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public String toString () {
  if (this.collection.isEmpty()) {
    return null; // Noncompliant
  } else {
    // ...


]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public String toString () {
  if (this.collection.isEmpty()) {
    return "";
  } else {
    // ...


]]>
        </example>
    </rule>
    <rule name="WaitInSynchronizeCheck"
          language="java"
          message="java.zyzx.WaitInSynchronizeCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.WaitInSynchronizeCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

private void removeElement() {
  while (!suitableCondition()){
    obj.wait();
  }
  ... // Perform removal
}
or

private void removeElement() {
  while (!suitableCondition()){
    wait();
  }
  ... // Perform removal
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


private synchronized void removeElement() {
  while (!suitableCondition()){
    wait();
  }
  ... // Perform removal
}


]]>
        </example>
    </rule>
    <rule name="ThreadSleepCheck"
          language="java"
          message="java.zyzx.ThreadSleepCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ThreadSleepCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void doSomething(){
  synchronized(monitor) {
    while(notReady()){
      Thread.sleep(200);
    }
    process();
  }
  ...
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


public void doSomething(){
  synchronized(monitor) {
    while(notReady()){
      monitor.wait(200);
    }
    process();
  }
  ...
}

]]>
        </example>
    </rule>
    <rule name="ForLoopIncrementSignCheck"
          language="java"
          message="java.zyzx.ForLoopIncrementSignCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ForLoopIncrementSignCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void doSomething(String [] strings) {
  for (int i = 0; i < strings.length; i--) { // Noncompliant;
    String string = strings[i];  // ArrayIndexOutOfBoundsException when i reaches -1
    //...
  }

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


public void doSomething(String [] strings) {
  for (int i = 0; i < strings.length; i++) {
    String string = strings[i];
    //...
  }

]]>
        </example>
    </rule>
    <rule name="ImmediateReverseBoxingCheck"
          language="java"
          message="java.zyzx.ImmediateReverseBoxingCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ImmediateReverseBoxingCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void examineInt(int a) {
  //...
}

public void examineInteger(Integer a) {
  // ...
}

public void func() {
  int i = 0;
  Integer iger1 = Integer.valueOf(0);
  double d = 1.0;

  int dIntValue = new Double(d).intValue(); // Noncompliant

  examineInt(new Integer(i).intValue()); // Noncompliant; explicit box/unbox
  examineInt(Integer.valueOf(i));  // Noncompliant; boxed int will be auto-unboxed

  examineInteger(i); // Compliant; value is boxed but not then unboxed
  examineInteger(iger1.intValue()); // Noncompliant; unboxed int will be autoboxed

  Integer iger2 = new Integer(iger1); // Noncompliant; unnecessary unboxing, value can be reused
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


public void examineInt(int a) {
  //...
}

public void examineInteger(Integer a) {
  // ...
}

public void func() {
  int i = 0;
  Integer iger1 = Integer.valueOf(0);
  double d = 1.0;

  int dIntValue = (int) d;

  examineInt(i);

  examineInteger(i);
  examineInteger(iger1);
}

]]>
        </example>
    </rule>
    <rule name="ThreadOverridesRunCheck"
          language="java"
          message="java.zyzx.ThreadOverridesRunCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ThreadOverridesRunCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

class Thread1 extends Thread {

//...

}

class Thread2 implements Runnable {

//...

}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


class Thread1 extends Thread {
@Override
public void run() {
//...
}
}

class Thread2 implements Runnable {
@Override
public void run() {
//...
}
}

]]>
        </example>
    </rule>
    <rule name="ClassComparedByNameCheck"
          language="java"
          message="java.zyzx.ClassComparedByNameCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ClassComparedByNameCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

package computer;
class Pear extends Laptop { ... }

package food;
class Pear extends Fruit { ... }

class Store {

  public boolean hasSellByDate(Object item) {
    if ("Pear".equals(item.getClass().getSimpleName())) {  // Noncompliant
      return true;  // Results in throwing away week-old computers
    }
    return false;
  }

  public boolean isList(Class<T> valueClass) {
    if (List.class.getName().equals(valueClass.getName())) {  // Noncompliant
      return true;
    }
    return false;
  }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


class Store {

  public boolean hasSellByDate(Object item) {
    if (item instanceof food.Pear) {
      return true;
    }
    return false;
  }

  public boolean isList(Class<T> valueClass) {
    if (valueClass.isAssignableFrom(List.class)) {
      return true;
    }
    return false;
  }
}

]]>
        </example>
    </rule>
    <rule name="CollectionCallingItselfCheck"
          language="java"
          message="java.zyzx.CollectionCallingItselfCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CollectionCallingItselfCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

List <Object> objs = new ArrayList<Object>();
objs.add("Hello");

objs.add(objs); // Noncompliant; StackOverflowException if objs.hashCode() called
objs.addAll(objs); // Noncompliant; behavior undefined
objs.containsAll(objs); // Noncompliant; always true
objs.removeAll(objs); // Noncompliant; confusing. Use clear() instead
objs.retainAll(objs); // Noncompliant; NOOP

]]>
        </example>
    </rule>
    <rule name="InstanceOfAlwaysTrueCheck"
          language="java"
          message="java.zyzx.InstanceOfAlwaysTrueCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.InstanceOfAlwaysTrueCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

a = false;
if (a) { // Noncompliant
  doSomething(); // never executed
}

if (false) { // Noncompliant;
  doSomething();
} else {
  doSomethingElse(); // never executed
}

]]>
        </example>
    </rule>
    <rule name="CustomSerializationMethodCheck"
          language="java"
          message="java.zyzx.CustomSerializationMethodCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CustomSerializationMethodCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class Watermelon implements Serializable {
  // ...
  void writeObject(java.io.ObjectOutputStream out)// Noncompliant; not private
        throws IOException
  {...}

  private void readObject(java.io.ObjectInputStream in)
  {...}

  public void readObjectNoData()  // Noncompliant; not private
  {...}

}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public class Watermelon implements Serializable {
  // ...
  private void writeObject(java.io.ObjectOutputStream out)
        throws IOException
  {...}

  private void readObject(java.io.ObjectInputStream in)
        throws IOException, ClassNotFoundException
  {...}

  private void readObjectNoData()
        throws ObjectStreamException
  {...}



]]>
        </example>
    </rule>
    <rule name="PrimitiveWrappersInTernaryOperatorCheck"
          language="java"
          message="java.zyzx.PrimitiveWrappersInTernaryOperatorCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.PrimitiveWrappersInTernaryOperatorCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

Integer i = 123456789;
Float f = 1.0f;
Number n = condition ? i : f;  // Noncompliant; i is coerced to float. n = 1.23456792E8

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

Integer i = 123456789;
Float f = 1.0f;
Number n = condition ? (Number) i : f;  // n = 123456789



]]>
        </example>
    </rule>
    <rule name="IdenticalOperandOnBinaryExpressionCheck"
          language="java"
          message="java.zyzx.IdenticalOperandOnBinaryExpressionCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.IdenticalOperandOnBinaryExpressionCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

if ( a == a ) { // always true
  doZ();
}
if ( a != a ) { // always false
  doY();
}
if ( a == b && a == b ) { // if the first one is true, the second one is too
  doX();
}
if ( a == b || a == b ) { // if the first one is true, the second one is too
  doW();
}

int j = 5 / 5; //always 1
int k = 5 - 5; //always 0

c.equals(c); //always true

float f;
if(f != f) { //test for NaN value
  System.out.println("f is NaN");
}

int i = 1 << 1; // Compliant
int j = a << a; // Noncompliant

]]>
        </example>
    </rule>
    <rule name="CollectionInappropriateCallsCheck"
          language="java"
          message="java.zyzx.CollectionInappropriateCallsCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CollectionInappropriateCallsCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class S2175 {

  public static void main(String[] args) {
    String foo = "42";
    Map<Integer, Object> map = new HashMap<>();
    map.remove(foo); // Noncompliant; will return 'null' for sure because 'map' is handling only Integer keys

    // ...

    List<String> list = new ArrayList<String>();
    Integer integer = Integer.valueOf(1);
    if (list.contains(integer)) { // Noncompliant; always false.
      list.remove(integer); // Noncompliant; list.add(integer) doesn't compile, so this will always return 'false'
    }
  }

}

]]>
        </example>
    </rule>
    <rule name="ShiftOnIntOrLongCheck"
          language="java"
          message="java.zyzx.ShiftOnIntOrLongCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ShiftOnIntOrLongCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public int shift(int a) {
  int x = a >> 32; // Noncompliant
  return a << 48;  // Noncompliant
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public int shift(int a) {
  int x = a >> 31;
  return a << 16;
}

]]>
        </example>
    </rule>
    <rule name="InvalidDateValuesCheck"
          language="java"
          message="java.zyzx.InvalidDateValuesCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.InvalidDateValuesCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

Date d = new Date();
d.setDate(25);
d.setYear(2014);
d.setMonth(12);  // Noncompliant; rolls d into the next year

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

Date d = new Date();
d.setDate(25);
d.setYear(2014);
d.setMonth(11);

]]>
        </example>
    </rule>
    <rule name="ReturnInFinallyCheck"
          language="java"
          message="java.zyzx.ReturnInFinallyCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ReturnInFinallyCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public static void main(String[] args) {
  try {
    doSomethingWhichThrowsException();
    System.out.println("OK");   // incorrect "OK" message is printed
  } catch (RuntimeException e) {
    System.out.println("ERROR");  // this message is not shown
  }
}

public static void doSomethingWhichThrowsException() {
  try {
    throw new RuntimeException();
  } finally {
    for (int i = 0; i < 10; i ++) {
      //...
      if (q == i) {
        break; // ignored
      }
    }

    /* ... */
    return;      // Noncompliant - prevents the RuntimeException from being propagated
  }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public static void main(String[] args) {
  try {
    doSomethingWhichThrowsException();
    System.out.println("OK");
  } catch (RuntimeException e) {
    System.out.println("ERROR");  // "ERROR" is printed as expected
  }
}

public static void doSomethingWhichThrowsException() {
  try {
    throw new RuntimeException();
  } finally {
    for (int i = 0; i < 10; i ++) {
      //...
      if (q == i) {
        break; // ignored
      }
    }

    /* ... */
  }
}

]]>
        </example>
    </rule>
    <rule name="LocksNotUnlockedCheck"
          language="java"
          message="java.zyzx.LocksNotUnlockedCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.LocksNotUnlockedCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class MyClass {
  private Lock lock = new Lock();

  public void doSomething() {
    lock.lock(); // Noncompliant
    if (isInitialized()) {
      // ...
      lock.unlock();
    }
  }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public class MyClass {
  private Lock lock = new Lock();

  public void doSomething() {
    if (isInitialized()) {
      lock.lock();
      // ...
      lock.unlock();
    }
  }
}

]]>
        </example>
    </rule>
    <rule name="ForLoopFalseConditionCheck"
          language="java"
          message="java.zyzx.ForLoopFalseConditionCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ForLoopFalseConditionCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
循环应该至少走一次.
for (int i = 10; i < 10; i++) {  // Noncompliant
  // ...

]]>
        </example>
    </rule>
    <rule name="CastArithmeticOperandCheck"
          language="java"
          message="java.zyzx.CastArithmeticOperandCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CastArithmeticOperandCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

float twoThirds = 2/3; // Noncompliant; int division. Yields 0.0
long millisInYear = 1_000*3_600*24*365; // Noncompliant; int multiplication. Yields 1471228928
long bigNum = Integer.MAX_VALUE + 2; // Noncompliant. Yields -2147483647
long bigNegNum =  Integer.MIN_VALUE-1; //Noncompliant, gives a positive result instead of a negative one.
Date myDate = new Date(seconds * 1_000); //Noncompliant, won't produce the expected result if seconds > 2_147_483
...
public long compute(int factor){
  return factor * 10_000;  //Noncompliant, won't produce the expected result if factor > 214_748
}

public float compute2(long factor){
  return factor / 123;  //Noncompliant, will be rounded to closest long integer
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

float twoThirds = 2f/3; // 2 promoted to float. Yields 0.6666667
long millisInYear = 1_000L*3_600*24*365; // 1000 promoted to long. Yields 31_536_000_000
long bigNum = Integer.MAX_VALUE + 2L; // 2 promoted to long. Yields 2_147_483_649
long bigNegNum =  Integer.MIN_VALUE-1L; // Yields -2_147_483_649
Date myDate = new Date(seconds * 1_000L);
...
public long compute(int factor){
  return factor * 10_000L;
}

public float compute2(long factor){
  return factor / 123f;
}

]]>
        </example>
    </rule>
    <rule name="ParameterReassignedToCheck"
          language="java"
          message="java.zyzx.ParameterReassignedToCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ParameterReassignedToCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void doTheThing(String str, int i, List<String> strings) {
  str = Integer.toString(i); // Noncompliant

  for (String s : strings) {
    s = "hello world"; // Noncompliant
  }
}

]]>
        </example>
    </rule>
    <rule name="ThreadWaitCallCheck"
          language="java"
          message="java.zyzx.ThreadWaitCallCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ThreadWaitCallCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

Thread myThread = new Thread(new RunnableJob());
...
myThread.wait(2000);

]]>
        </example>
    </rule>
    <rule name="MethodNamedHashcodeOrEqualCheck"
          language="java"
          message="java.zyzx.MethodNamedHashcodeOrEqualCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.MethodNamedHashcodeOrEqualCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public int hashcode() { /* ... */ }  // Noncompliant

public String tostring() { /* ... */ } // Noncompliant

public boolean equal(Object obj) { /* ... */ }  // Noncompliant

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

@Override
public int hashCode() { /* ... */ }

@Override
public String toString() { /* ... */ }

@Override
public boolean equals(Object obj) { /* ... */ }

]]>
        </example>
    </rule>
    <rule name="AbsOnNegativeCheck"
          language="java"
          message="java.zyzx.AbsOnNegativeCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.AbsOnNegativeCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void doSomething(String str) {
  if (Math.abs(str.hashCode()) > 0) { // Noncompliant
    // ...
  }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public void doSomething(String str) {
  if (str.hashCode() != 0) {
    // ...
  }
}

]]>
        </example>
    </rule>
    <rule name="TransactionalMethodVisibilityCheck"
          language="java"
          message="java.zyzx.TransactionalMethodVisibilityCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.TransactionalMethodVisibilityCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

@Transactional  // Noncompliant
private void doTheThing(ArgClass arg) {
  // ...
}

]]>
        </example>
    </rule>
    <rule name="NonSerializableWriteCheck"
          language="java"
          message="java.zyzx.NonSerializableWriteCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.NonSerializableWriteCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class Vegetable {  // neither implements Serializable nor extends a class that does
  //...
}

public class Menu {
  public void meal() throws IOException {
    Vegetable veg;
    //...
    FileOutputStream fout = new FileOutputStream(veg.getName());
    ObjectOutputStream oos = new ObjectOutputStream(fout);
    oos.writeObject(veg);  // Noncompliant. Nothing will be written
  }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public class Vegetable implements Serializable {  // can now be serialized
  //...
}

public class Menu {
  public void meal() throws IOException {
    Vegetable veg;
    //...
    FileOutputStream fout = new FileOutputStream(veg.getName());
    ObjectOutputStream oos = new ObjectOutputStream(fout);
    oos.writeObject(veg);
  }
}

]]>
        </example>
    </rule>
    <rule name="SerializableObjectInSessionCheck"
          language="java"
          message="java.zyzx.SerializableObjectInSessionCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.SerializableObjectInSessionCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class Address {
  //...
}

//...
HttpSession session = request.getSession();
session.setAttribute("address", new Address());  // Noncompliant; Address isn't serializable

]]>
        </example>
    </rule>
    <rule name="StaticMultithreadedUnsafeFieldsCheck"
          language="java"
          message="java.zyzx.StaticMultithreadedUnsafeFieldsCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.StaticMultithreadedUnsafeFieldsCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class MyClass {
  private static SimpleDateFormat format = new SimpleDateFormat("HH-mm-ss");  // Noncompliant
  private static Calendar calendar = Calendar.getInstance();  // Noncompliant

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public class MyClass {
  private SimpleDateFormat format = new SimpleDateFormat("HH-mm-ss");
  private Calendar calendar = Calendar.getInstance();

]]>
        </example>
    </rule>
    <rule name="PrintfFailCheck"
          language="java"
          message="java.zyzx.PrintfFailCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.PrintfFailCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

String.format("The value of my integer is %d", "Hello World");  // Noncompliant; an 'int' is expected rather than a String
String.format("Duke's Birthday year is %tX", c);  //Noncompliant; X is not a supported time conversion character
String.format("Display %0$d and then %d", 1);   //Noncompliant; arguments are numbered starting from 1
String.format("Not enough arguments %d and %d", 1);  //Noncompliant; the second argument is missing
String.format("%< is equals to %d", 2);   //Noncompliant; the argument index '<' refers to the previous format specifier but there isn't one

MessageFormat.format("Result {1}.", value); // Noncompliant; Not enough arguments. (first element is {0})
MessageFormat.format("Result {{0}.", value); // Noncompliant; Unbalanced number of curly brace (single curly braces should be escaped)
MessageFormat.format("Result ' {0}", value); // Noncompliant; Unbalanced number of quotes (single quote must be escaped)

java.util.logging.Logger logger;
logger.log(java.util.logging.Level.SEVERE, "Result {1}!", 14); // Noncompliant {{Not enough arguments.}}

org.slf4j.Logger slf4jLog;
org.slf4j.Marker marker;

slf4jLog.debug(marker, "message {}"); // Noncompliant {{Not enough arguments.}}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

String.format("The value of my integer is %d", 3);
String.format("Duke's Birthday year is %tY", c);
String.format("Display %1$d and then %d", 1);
String.format("Not enough arguments %d and %d", 1, 2);
String.format("%d is equals to %<", 2);

MessageFormat.format("Result {0}.", value);
MessageFormat.format("Result {0} & {1}.", value, value);
MessageFormat.format("Result {0}.", myObject);

java.util.logging.Logger logger;
logger.log(java.util.logging.Level.SEVERE, "Result {1}!", 14, 2); // Noncompliant {{Not enough arguments.}}

org.slf4j.Logger slf4jLog;
org.slf4j.Marker marker;

slf4jLog.debug(marker, "message {}", 1);

]]>
        </example>
    </rule>
    <rule name="UselessIncrementCheck"
          language="java"
          message="java.zyzx.UselessIncrementCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.UselessIncrementCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public int pickNumber() {
  int i = 0;
  int j = 0;

  i = i++; // Noncompliant; i is still zero

  return j++; // Noncompliant; 0 returned
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public int pickNumber() {
  int i = 0;
  int j = 0;

  i++;
  return ++j;
}

]]>
        </example>
    </rule>
    <rule name="ReflectionOnNonRuntimeAnnotationCheck"
          language="java"
          message="java.zyzx.ReflectionOnNonRuntimeAnnotationCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ReflectionOnNonRuntimeAnnotationCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

Method m = String.class.getMethod("getBytes", new Class[] {int.class,
int.class, byte[].class, int.class});
if (m.isAnnotationPresent(Override.class)) {  // Noncompliant; test will always return false, even when @Override is present in the code

]]>
        </example>
    </rule>
    <rule name="DuplicateConditionIfElseIfCheck"
          language="java"
          message="java.zyzx.DuplicateConditionIfElseIfCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.DuplicateConditionIfElseIfCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 1)  // Noncompliant
  moveWindowToTheBackground();
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

if (param == 1)
  openWindow();
else if (param == 2)
  closeWindow();
else if (param == 3)
  moveWindowToTheBackground();
}

]]>
        </example>
    </rule>
    <rule name="UnclosedResourcesCheck"
          language="java"
          message="java.zyzx.UnclosedResourcesCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.UnclosedResourcesCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

private void readTheFile() throws IOException {
  Path path = Paths.get(this.fileName);
  BufferedReader reader = Files.newBufferedReader(path, this.charset);
  // ...
  reader.close();  // Noncompliant
  // ...
  Files.lines("input.txt").forEach(System.out::println); // Noncompliant: The stream needs to be closed
}

private void doSomething() {
  OutputStream stream = null;
  try {
    for (String property : propertyList) {
      stream = new FileOutputStream("myfile.txt");  // Noncompliant
      // ...
    }
  } catch (Exception e) {
    // ...
  } finally {
    stream.close();  // Multiple streams were opened. Only the last is closed.
  }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

private void readTheFile(String fileName) throws IOException {
    Path path = Paths.get(fileName);
    try (BufferedReader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8)) {
      reader.readLine();
      // ...
    }
    // ..
    try (Stream<String> input = Files.lines("input.txt"))  {
      input.forEach(System.out::println);
    }
}

private void doSomething() {
  OutputStream stream = null;
  try {
    stream = new FileOutputStream("myfile.txt");
    for (String property : propertyList) {
      // ...
    }
  } catch (Exception e) {
    // ...
  } finally {
    stream.close();
  }
}
Java 7引入了try-with-resources语句，该语句隐式关闭Closeables。 在try-with-resources语句中打开的所有资源都被该规则忽略。
try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
  //...
}
catch ( ... ) {
  //...
}

]]>
        </example>
    </rule>
    <rule name="SynchronizationOnStringOrBoxedCheck"
          language="java"
          message="java.zyzx.SynchronizationOnStringOrBoxedCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.SynchronizationOnStringOrBoxedCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

private static final Boolean bLock = Boolean.FALSE;
private static final Integer iLock = Integer.valueOf(0);
private static final String sLock = "LOCK";

public void doSomething() {

  synchronized(bLock) {  // Noncompliant
    // ...
  }
  synchronized(iLock) {  // Noncompliant
    // ...
  }
  synchronized(sLock) {  // Noncompliant
    // ...
  }

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

private static final Object lock1 = new Object();
private static final Object lock2 = new Object();
private static final Object lock3 = new Object();

public void doSomething() {

  synchronized(lock1) {
    // ...
  }
  synchronized(lock2) {
    // ...
  }
  synchronized(lock3) {
    // ...
  }

]]>
        </example>
    </rule>
    <rule name="SerializableSuperConstructorCheck"
          language="java"
          message="java.zyzx.SerializableSuperConstructorCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.SerializableSuperConstructorCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class Fruit {
  private Season ripe;

  public Fruit (Season ripe) {...}
  public void setRipe(Season ripe) {...}
  public Season getRipe() {...}
}

public class Raspberry extends Fruit
        implements Serializable {  // Noncompliant; nonserializable ancestor doesn't have no-arg constructor
  private static final long serialVersionUID = 1;

  private String variety;

  public Raspberry(Season ripe, String variety) { ...}
  public void setVariety(String variety) {...}
  public String getVarity() {...}
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public class Fruit {
  private Season ripe;

  public Fruit () {...};  // Compliant; no-arg constructor added to ancestor
  public Fruit (Season ripe) {...}
  public void setRipe(Season ripe) {...}
  public Season getRipe() {...}
}

public class Raspberry extends Fruit
        implements Serializable {
  private static final long serialVersionUID = 1;

  private String variety;

  public Raspberry(Season ripe, String variety) {...}
  public void setVariety(String variety) {...}
  public String getVarity() {...}
}

]]>
        </example>
    </rule>
    <rule name="IgnoredStreamReturnValueCheck"
          language="java"
          message="java.zyzx.IgnoredStreamReturnValueCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.IgnoredStreamReturnValueCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void doSomething(String fileName) {
  try {
    InputStream is = new InputStream(file);
    byte [] buffer = new byte[1000];
    is.read(buffer);  // Noncompliant
    // ...
  } catch (IOException e) { ... }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public void doSomething(String fileName) {
  try {
    InputStream is = new InputStream(file);
    byte [] buffer = new byte[1000];
    int count = 0;
    while (count = is.read(buffer) > 0) {
      // ...
    }
  } catch (IOException e) { ... }
}

]]>
        </example>
    </rule>


</ruleset>