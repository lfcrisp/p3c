<?xml version="1.0"?>

<ruleset name="zyzxSonar" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>zyzxSonar</description>

    <rule name="MethodParameterCountRule"
          language="java"
          message="java.zyzx.MethodParameterCountRule.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.MethodParameterCountRule">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
    public void methodB(int a, int b, int c, int d, int e) {

    }
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    public void methodA(Obj o) {

    }
]]>
        </example>
    </rule>
    <rule name="CompareToResultTestCheck"
          language="java"
          message="java.zyzx.CompareToResultTestCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CompareToResultTestCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
    if (myClass.compareTo(arg) == -1) {  // Noncompliant
        // ...
    }
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    if (myClass.compareTo(arg) < 0) {
        // ...
    }
]]>
        </example>
    </rule>
    <rule name="CompareToReturnValueCheck"
          language="java"
          message="java.zyzx.CompareToReturnValueCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CompareToReturnValueCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
    public int compareTo(MyClass myclass) {
      if (condition) {
        return Integer.MIN_VALUE;  // Noncompliant
      }
     }
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    public int compareTo(MyClass myclass) {
      if (condition) {
        return -1;
      }
    }
]]>
        </example>
    </rule>
    <rule name="LongBitsToDoubleOnIntCheck"
          language="java"
          message="java.zyzx.LongBitsToDoubleOnIntCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.LongBitsToDoubleOnIntCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
int i = 42;
double d = Double.longBitsToDouble(i);  // Noncompliant
]]>
        </example>
    </rule>
    <rule name="MethodNamedEqualsCheck"
          language="java"
          message="java.zyzx.MethodNamedEqualsCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.MethodNamedEqualsCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
class MyClass {
  private int foo = 1;

  public boolean equals(MyClass o) {  // Noncompliant; does not override Object.equals(Object)
    return o != null && o.foo == this.foo;
  }

  public static void main(String[] args) {
    MyClass o1 = new MyClass();
    Object o2 = new MyClass();
    System.out.println(o1.equals(o2));  // Prints "false" because o2 an Object not a MyClass
  }
}

class MyClass2 {
  public boolean equals(MyClass2 o) {  // Ignored; `boolean equals(Object)` also present
    //..
  }

  public boolean equals(Object o) {
    //...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
    class MyClass {
  private int foo = 1;

  @Override
  public boolean equals(Object o) {
    if (this == o) {
        return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    MyClass other = (MyClass)o;
    return this.foo == other.foo;
  }

  /* ... */
}
]]>
        </example>
    </rule>
    <rule name="EqualsOverridenWithHashCodeCheck"
          language="java"
          message="java.zyzx.EqualsOverridenWithHashCodeCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.EqualsOverridenWithHashCodeCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
class MyClass {    // Noncompliant - should also override "hashCode()"

  @Override
  public boolean equals(Object obj) {
    /* ... */
  }

}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
class MyClass {    // Compliant

  @Override
  public boolean equals(Object obj) {
    /* ... */
  }

  @Override
  public int hashCode() {
    /* ... */
  }

}
]]>
        </example>
    </rule>
    <rule name="ArrayHashCodeAndToStringCheck"
          language="java"
          message="java.zyzx.ArrayHashCodeAndToStringCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ArrayHashCodeAndToStringCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public static void main( String[] args )
{
    String argStr = args.toString(); // Noncompliant
    int argHash = args.hashCode(); // Noncompliant

]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public static void main( String[] args )
{
    String argStr = Arrays.toString(args);
    int argHash = Arrays.hashCode(args);

]]>
        </example>
    </rule>
    <rule name="HasNextCallingNextCheck"
          language="java"
          message="java.zyzx.HasNextCallingNextCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.HasNextCallingNextCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public class FibonacciIterator implements Iterator<Integer>{
...
@Override
public boolean hasNext() {
  if(next() != null) {
    return true;
  }
  return false;
}
...
}
]]>
        </example>
    </rule>
    <rule name="IteratorNextExceptionCheck"
          language="java"
          message="java.zyzx.IteratorNextExceptionCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.IteratorNextExceptionCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public class MyIterator implements Iterator<String>{
  ...
  public String next(){
    if(!hasNext()){
      return null;
    }
    ...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public class MyIterator implements Iterator<String>{
  ...
  public String next(){
    if(!hasNext()){
      throw new NoSuchElementException();
    }
    ...
  }
}
]]>
        </example>
    </rule>
    <rule name="PreparedStatementAndResultSetCheck"
          language="java"
          message="java.zyzx.PreparedStatementAndResultSetCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.PreparedStatementAndResultSetCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
PreparedStatement ps = con.prepareStatement("SELECT fname, lname FROM employees where hireDate > ? and salary < ?");
ps.setDate(0, date);  // Noncompliant
ps.setDouble(3, salary);  // Noncompliant

ResultSet rs = ps.executeQuery();
while (rs.next()) {
  String fname = rs.getString(0);  // Noncompliant
  // ...
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
PreparedStatement ps = con.prepareStatement("SELECT fname, lname FROM employees where hireDate > ? and salary < ?");
ps.setDate(1, date);
ps.setDouble(2, salary);

ResultSet rs = ps.executeQuery();
while (rs.next()) {
  String fname = rs.getString(1);
  // ...
}
]]>
        </example>
    </rule>
    <rule name="UnusedReturnedDataCheck"
          language="java"
          message="java.zyzx.UnusedReturnedDataCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.UnusedReturnedDataCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public void doSomethingWithFile(String fileName) {
  BufferedReader buffReader = null;
  try {
    buffReader = new BufferedReader(new FileReader(fileName));
    while (buffReader.readLine() != null) { // Noncompliant
      // ...
    }
  } catch (IOException e) {
    // ...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public void doSomethingWithFile(String fileName) {
  BufferedReader buffReader = null;
  try {
    buffReader = new BufferedReader(new FileReader(fileName));
    String line = null;
    while ((line = buffReader.readLine()) != null) {
      // ...
    }
  } catch (IOException e) {
    // ...
  }
}
]]>
        </example>
    </rule>
    <rule name="RunFinalizersCheck"
          language="java"
          message="java.zyzx.RunFinalizersCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.RunFinalizersCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public static void main(String [] args) {
  ...
  System.runFinalizersOnExit(true);  // Noncompliant
  ...
}

protected void finalize(){
  doSomething();
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public static void main(String [] args) {
  Runtime.addShutdownHook(new Runnable() {
    public void run(){
      doSomething();
    }
  });
  //...
]]>
        </example>
    </rule>
    <rule name="ScheduledThreadPoolExecutorZeroCheck"
          language="java"
          message="java.zyzx.ScheduledThreadPoolExecutorZeroCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ScheduledThreadPoolExecutorZeroCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public void do(){

  ScheduledThreadPoolExecutor stpe1 = new ScheduledThreadPoolExecutor(0); // Noncompliant

  ScheduledThreadPoolExecutor stpe2 = new ScheduledThreadPoolExecutor(POOL_SIZE);
  stpe2.setCorePoolSize(0);  // Noncompliant
]]>
        </example>
    </rule>
    <rule name="InnerClassOfNonSerializableCheck"
          language="java"
          message="java.zyzx.InnerClassOfNonSerializableCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.InnerClassOfNonSerializableCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
public class Pomegranate {
  // ...

  public class Seed implements Serializable {  // Noncompliant; serialization will fail
    // ...
  }
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
public class Pomegranate {
  // ...

  public static class Seed implements Serializable {
    // ...
  }
}
]]>
        </example>
    </rule>
    <rule name="StringBufferAndBuilderWithCharCheck"
          language="java"
          message="java.zyzx.StringBufferAndBuilderWithCharCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.StringBufferAndBuilderWithCharCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
     用字符实例化StringBuilder或StringBuffer会产生误导，因为大多数Java开发人员都希望字符是StringBuffer的初始值。实际发生的是，字符的int表示用于确定StringBuffer的初始大小。
    StringBuffer foo = new StringBuffer('x');   //错误 等同于 StringBuffer foo = new StringBuffer(120);
    StringBuffer foo = new StringBuffer("x");  //正确示例
Negative example:
StringBuffer foo = new StringBuffer('x');   //equivalent to StringBuffer foo = new StringBuffer(120);
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
StringBuffer foo = new StringBuffer("x");
]]>
        </example>
    </rule>
    <rule name="ObjectFinalizeOverridenCallsSuperFinalizeCheck"
          language="java"
          message="java.zyzx.ObjectFinalizeOverridenCallsSuperFinalizeCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ObjectFinalizeOverridenCallsSuperFinalizeCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
protected void finalize() {   // Noncompliant; no call to super.finalize();
  releaseSomeResources();
}

protected void finalize() {
  super.finalize();  // Noncompliant; this call should come last
  releaseSomeResources();
}
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
protected void finalize() {
  releaseSomeResources();
  super.finalize();
}
]]>
        </example>
    </rule>
    <rule name="ThreadRunCheck"
          language="java"
          message="java.zyzx.ThreadRunCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ThreadRunCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:
Thread myThread = new Thread(runnable);
myThread.run(); // Noncompliant
]]>
        </example>
        <example>
            <![CDATA[
Positive example:
protected void finalize() {
  releaseSomeResources();
  super.finalize();

]]>
        </example>
    </rule>
    <rule name="ToStringReturningNullCheck"
          language="java"
          message="java.zyzx.ToStringReturningNullCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ToStringReturningNullCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public String toString () {
  if (this.collection.isEmpty()) {
    return null; // Noncompliant
  } else {
    // ...


]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public String toString () {
  if (this.collection.isEmpty()) {
    return "";
  } else {
    // ...


]]>
        </example>
    </rule>
    <rule name="WaitInSynchronizeCheck"
          language="java"
          message="java.zyzx.WaitInSynchronizeCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.WaitInSynchronizeCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

private void removeElement() {
  while (!suitableCondition()){
    obj.wait();
  }
  ... // Perform removal
}
or

private void removeElement() {
  while (!suitableCondition()){
    wait();
  }
  ... // Perform removal
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


private synchronized void removeElement() {
  while (!suitableCondition()){
    wait();
  }
  ... // Perform removal
}


]]>
        </example>
    </rule>
    <rule name="ThreadSleepCheck"
          language="java"
          message="java.zyzx.ThreadSleepCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ThreadSleepCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void doSomething(){
  synchronized(monitor) {
    while(notReady()){
      Thread.sleep(200);
    }
    process();
  }
  ...
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


public void doSomething(){
  synchronized(monitor) {
    while(notReady()){
      monitor.wait(200);
    }
    process();
  }
  ...
}

]]>
        </example>
    </rule>
    <rule name="ForLoopIncrementSignCheck"
          language="java"
          message="java.zyzx.ForLoopIncrementSignCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ForLoopIncrementSignCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void doSomething(String [] strings) {
  for (int i = 0; i < strings.length; i--) { // Noncompliant;
    String string = strings[i];  // ArrayIndexOutOfBoundsException when i reaches -1
    //...
  }

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


public void doSomething(String [] strings) {
  for (int i = 0; i < strings.length; i++) {
    String string = strings[i];
    //...
  }

]]>
        </example>
    </rule>
    <rule name="ImmediateReverseBoxingCheck"
          language="java"
          message="java.zyzx.ImmediateReverseBoxingCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ImmediateReverseBoxingCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public void examineInt(int a) {
  //...
}

public void examineInteger(Integer a) {
  // ...
}

public void func() {
  int i = 0;
  Integer iger1 = Integer.valueOf(0);
  double d = 1.0;

  int dIntValue = new Double(d).intValue(); // Noncompliant

  examineInt(new Integer(i).intValue()); // Noncompliant; explicit box/unbox
  examineInt(Integer.valueOf(i));  // Noncompliant; boxed int will be auto-unboxed

  examineInteger(i); // Compliant; value is boxed but not then unboxed
  examineInteger(iger1.intValue()); // Noncompliant; unboxed int will be autoboxed

  Integer iger2 = new Integer(iger1); // Noncompliant; unnecessary unboxing, value can be reused
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


public void examineInt(int a) {
  //...
}

public void examineInteger(Integer a) {
  // ...
}

public void func() {
  int i = 0;
  Integer iger1 = Integer.valueOf(0);
  double d = 1.0;

  int dIntValue = (int) d;

  examineInt(i);

  examineInteger(i);
  examineInteger(iger1);
}

]]>
        </example>
    </rule>
    <rule name="ThreadOverridesRunCheck"
          language="java"
          message="java.zyzx.ThreadOverridesRunCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ThreadOverridesRunCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

class Thread1 extends Thread {

//...

}

class Thread2 implements Runnable {

//...

}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


class Thread1 extends Thread {
@Override
public void run() {
//...
}
}

class Thread2 implements Runnable {
@Override
public void run() {
//...
}
}

]]>
        </example>
    </rule>
    <rule name="ClassComparedByNameCheck"
          language="java"
          message="java.zyzx.ClassComparedByNameCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.ClassComparedByNameCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

package computer;
class Pear extends Laptop { ... }

package food;
class Pear extends Fruit { ... }

class Store {

  public boolean hasSellByDate(Object item) {
    if ("Pear".equals(item.getClass().getSimpleName())) {  // Noncompliant
      return true;  // Results in throwing away week-old computers
    }
    return false;
  }

  public boolean isList(Class<T> valueClass) {
    if (List.class.getName().equals(valueClass.getName())) {  // Noncompliant
      return true;
    }
    return false;
  }
}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:


class Store {

  public boolean hasSellByDate(Object item) {
    if (item instanceof food.Pear) {
      return true;
    }
    return false;
  }

  public boolean isList(Class<T> valueClass) {
    if (valueClass.isAssignableFrom(List.class)) {
      return true;
    }
    return false;
  }
}

]]>
        </example>
    </rule>
    <rule name="CollectionCallingItselfCheck"
          language="java"
          message="java.zyzx.CollectionCallingItselfCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CollectionCallingItselfCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

List <Object> objs = new ArrayList<Object>();
objs.add("Hello");

objs.add(objs); // Noncompliant; StackOverflowException if objs.hashCode() called
objs.addAll(objs); // Noncompliant; behavior undefined
objs.containsAll(objs); // Noncompliant; always true
objs.removeAll(objs); // Noncompliant; confusing. Use clear() instead
objs.retainAll(objs); // Noncompliant; NOOP

]]>
        </example>
    </rule>
    <rule name="InstanceOfAlwaysTrueCheck"
          language="java"
          message="java.zyzx.InstanceOfAlwaysTrueCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.InstanceOfAlwaysTrueCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

a = false;
if (a) { // Noncompliant
  doSomething(); // never executed
}

if (false) { // Noncompliant;
  doSomething();
} else {
  doSomethingElse(); // never executed
}

]]>
        </example>
    </rule>
    <rule name="CustomSerializationMethodCheck"
          language="java"
          message="java.zyzx.CustomSerializationMethodCheck.rule.msg"
          class="com.alibaba.p3c.pmd.lang.java.rule.zyzx.CustomSerializationMethodCheck">
        <!--级别，1强制，2推荐，3参考-->
        <priority>1</priority>

        <example>
            <![CDATA[
Negative example:

public class Watermelon implements Serializable {
  // ...
  void writeObject(java.io.ObjectOutputStream out)// Noncompliant; not private
        throws IOException
  {...}

  private void readObject(java.io.ObjectInputStream in)
  {...}

  public void readObjectNoData()  // Noncompliant; not private
  {...}

}

]]>
        </example>
        <example>
            <![CDATA[
Positive example:

public class Watermelon implements Serializable {
  // ...
  private void writeObject(java.io.ObjectOutputStream out)
        throws IOException
  {...}

  private void readObject(java.io.ObjectInputStream in)
        throws IOException, ClassNotFoundException
  {...}

  private void readObjectNoData()
        throws ObjectStreamException
  {...}



]]>
        </example>
    </rule>


</ruleset>